apply plugin: 'com.android.library'
//apply plugin: 'bintray-release'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.+'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android.exoplayer:exoplayer:r1.5.3'
    testCompile 'junit:junit:4.12'
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        title = "Dash Media Library"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "https://developer.android.com/reference","${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

//publish {
//    repoName = 'dashmedia'
//    userOrg = 'paringer'
//    groupId = 'com.paringer.dashmedia'
//    artifactId = 'dashmedia'
//    version = '1.0.0'
//    description = 'DashMedia library.'
//    website = 'https://github.com/paringer/DashMediaLibrary'
//}